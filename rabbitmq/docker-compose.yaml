version: '3.8'

services:
  node_1:
    hostname: node_1
    image: "${RABBITMQ_IMAGE}"
    environment:
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS
      - RABBITMQ_ERLANG_COOKIE
    volumes: &rabbitmq_data
      - type: bind
        source: ./data
        target: /var/lib/rabbitmq/mnesia
    networks: &network
      - rabbitmq

  node_2: &node
    hostname: node_2
    image: "${RABBITMQ_IMAGE}"
    environment:
      - RABBITMQ_DEFAULT_NODE=node_1
      - RABBITMQ_ERLANG_COOKIE
    volumes:
      - << : *rabbitmq_data
      - type: bind
        source: ./entrypoint.sh
        target: &entrypoint /usr/local/bin/cluster-entrypoint.sh
        read_only: true
    entrypoint: *entrypoint
    networks: *network
    depends_on:
      - node_1

  node_3:
    << : *node
    hostname: node_3

  haproxy:
    image: "${RABBITMQ_HAPROXY_IMAGE}"
    ports:
      - "${RABBITMQ_NODE_PORT}:${RABBITMQ_NODE_PORT}"
      - "${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}"
      - "${RABBITMQ_STATS_PORT}:${RABBITMQ_STATS_PORT}"
    environment:
      - RABBITMQ_NODE_PORT
      - RABBITMQ_MANAGEMENT_PORT
      - RABBITMQ_STATS_PORT
    volumes:
      - type: bind
        source: ./haproxy.cfg
        target: /usr/local/etc/haproxy/haproxy.cfg
        read_only: true
    networks: *network
    depends_on:
      - node_1

networks:
  rabbitmq:
    name: rabbitmq_network
